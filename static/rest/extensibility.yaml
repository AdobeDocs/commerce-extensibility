openapi: 3.0.3
info:
  title: Adobe Commerce Extensions API
  description: |
    Comprehensive REST API documentation for Adobe Commerce Extensions, including:
    - **Observability Management**: Manage logging and monitoring subscriptions
    - **Shipping Methods**: Configure external shipping carriers
    - **Payment Methods**: Manage out-of-process payment integrations
    - **Tax Management**: Configure external tax calculation services
    - **Commerce Eventing**: Manage event subscriptions and providers
    - **Commerce Webhooks**: Manage webhook subscriptions
    - **Backend UI Extensions**: Manage UI component integrations
    - **Custom Attributes B2B**: Manage B2B custom attributes for quotes and companies
    
    These APIs enable external systems to integrate with Adobe Commerce for extended functionality.
  contact:
    name: Adobe Commerce
  license:
    name: Adobe Proprietary
servers:
  - url: https://{commerce_base_url}/rest/all
    description: Adobe Commerce REST API Base URL
    variables:
      commerce_base_url:
        default: example.commerce.adobe.com
        description: Your Adobe Commerce instance base URL

paths:
  # Observability APIs
  /V1/oope_observability/subscription:
    get:
      summary: Get observability subscriptions
      description: Retrieve a list of all observability subscriptions
      tags:
        - Observability Management
      responses:
        '200':
          description: List of subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
                  search_criteria:
                    $ref: '#/components/schemas/SearchCriteria'
                  total_count:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      summary: Create observability subscription
      description: Create a new observability subscription
      tags:
        - Observability Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'

    put:
      summary: Update observability subscription
      description: Update an existing observability subscription
      tags:
        - Observability Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /V1/oope_observability/subscription/{subscriptionId}:
    get:
      summary: Get observability subscription by ID
      description: Retrieve a specific observability subscription by its ID
      tags:
        - Observability Management
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: Unique identifier of the subscription
          schema:
            type: integer
      responses:
        '200':
          description: Subscription found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete observability subscription
      description: Delete an observability subscription by its ID
      tags:
        - Observability Management
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: Unique identifier of the subscription
          schema:
            type: integer
      responses:
        '200':
          description: Subscription deleted successfully
          content:
            application/json:
              schema:
                type: boolean

  # Shipping Methods APIs
  /V1/oope_shipping_carrier:
    get:
      summary: Get shipping carriers
      description: Retrieve a list of all out-of-process shipping carriers
      tags:
        - Shipping Methods
      responses:
        '200':
          description: List of shipping carriers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OutOfProcessCarrier'
                  search_criteria:
                    $ref: '#/components/schemas/SearchCriteria'
                  total_count:
                    type: integer

    post:
      summary: Create shipping carrier
      description: Create a new out-of-process shipping carrier
      tags:
        - Shipping Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutOfProcessCarrierRequest'
      responses:
        '200':
          description: Carrier created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessCarrier'

    put:
      summary: Update shipping carrier
      description: Update an existing out-of-process shipping carrier
      tags:
        - Shipping Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutOfProcessCarrierRequest'
      responses:
        '200':
          description: Carrier updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessCarrier'

  /V1/oope_shipping_carrier/{code}:
    get:
      summary: Get shipping carrier by code
      description: Retrieve a specific shipping carrier by its code
      tags:
        - Shipping Methods
      parameters:
        - name: code
          in: path
          required: true
          description: Unique code of the shipping carrier
          schema:
            type: string
      responses:
        '200':
          description: Carrier found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessCarrier'

    delete:
      summary: Delete shipping carrier
      description: Delete a shipping carrier by its code
      tags:
        - Shipping Methods
      parameters:
        - name: code
          in: path
          required: true
          description: Unique code of the shipping carrier
          schema:
            type: string
      responses:
        '200':
          description: Carrier deleted successfully
          content:
            application/json:
              schema:
                type: boolean

  # Payment Methods APIs
  /V1/oope_payment_method:
    get:
      summary: Get payment methods
      description: Retrieve a list of all out-of-process payment methods
      tags:
        - Payment Methods
      responses:
        '200':
          description: List of payment methods retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OutOfProcessPaymentMethod'
                  search_criteria:
                    $ref: '#/components/schemas/SearchCriteria'
                  total_count:
                    type: integer

    post:
      summary: Create or update payment method
      description: Create a new payment method or update an existing one
      tags:
        - Payment Methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutOfProcessPaymentMethodRequest'
      responses:
        '200':
          description: Payment method created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessPaymentMethod'

  /V1/oope_payment_method/{code}:
    get:
      summary: Get payment method by code
      description: Retrieve a specific payment method by its code
      tags:
        - Payment Methods
      parameters:
        - name: code
          in: path
          required: true
          description: Unique code of the payment method
          schema:
            type: string
      responses:
        '200':
          description: Payment method found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessPaymentMethod'

  # Tax Management APIs
  /V1/oope_tax_management/tax_integration:
    get:
      summary: Get tax integrations
      description: Retrieve a list of all configured tax integrations
      tags:
        - Tax Management
      responses:
        '200':
          description: List of tax integrations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutOfProcessTaxIntegration'

    post:
      summary: Create or update tax integration
      description: Create a new tax integration or update an existing one
      tags:
        - Tax Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxIntegrationRequest'
      responses:
        '200':
          description: Tax integration created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessTaxIntegration'

  /V1/oope_tax_management/tax_integration/{code}:
    get:
      summary: Get tax integration by code
      description: Retrieve a specific tax integration configuration by its unique code
      tags:
        - Tax Management
      parameters:
        - name: code
          in: path
          required: true
          description: Unique code identifying the tax integration
          schema:
            type: string
      responses:
        '200':
          description: Tax integration found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfProcessTaxIntegration'

  # Commerce Eventing APIs
  /V1/eventing/eventSubscribe:
    post:
      summary: Subscribe to event
      description: Create a new event subscription
      tags:
        - Commerce Eventing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDataRequest'
      responses:
        '200':
          description: Event subscription created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /V1/eventing/eventSubscribe/{name}:
    put:
      summary: Update event subscription
      description: Update an existing event subscription
      tags:
        - Commerce Eventing
      parameters:
        - name: name
          in: path
          required: true
          description: Event name to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDataRequest'
      responses:
        '200':
          description: Event subscription updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /V1/eventing/eventUnsubscribe/{name}:
    post:
      summary: Unsubscribe from event
      description: Remove an event subscription
      tags:
        - Commerce Eventing
      parameters:
        - name: name
          in: path
          required: true
          description: Event name to unsubscribe from
          schema:
            type: string
      responses:
        '200':
          description: Event subscription removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /V1/eventing/updateConfiguration:
    put:
      summary: Update eventing configuration
      description: Update the eventing system configuration
      tags:
        - Commerce Eventing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /V1/eventing/getEventProviders:
    get:
      summary: Get event providers
      description: Retrieve a list of all event providers
      tags:
        - Commerce Eventing
      responses:
        '200':
          description: List of event providers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventProvider'

  /V1/eventing/eventProvider:
    get:
      summary: Get event providers (alternative endpoint)
      description: Retrieve a list of all event providers
      tags:
        - Commerce Eventing
      responses:
        '200':
          description: List of event providers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventProvider'

    post:
      summary: Create event provider
      description: Create a new event provider
      tags:
        - Commerce Eventing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventProviderRequest'
      responses:
        '200':
          description: Event provider created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProvider'

    put:
      summary: Update event provider
      description: Update an existing event provider
      tags:
        - Commerce Eventing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventProviderRequest'
      responses:
        '200':
          description: Event provider updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProvider'

  /V1/eventing/eventProvider/{providerId}:
    get:
      summary: Get event provider by ID
      description: Retrieve a specific event provider by its provider ID
      tags:
        - Commerce Eventing
      parameters:
        - name: providerId
          in: path
          required: true
          description: Unique provider ID
          schema:
            type: string
      responses:
        '200':
          description: Event provider found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProvider'

    delete:
      summary: Delete event provider
      description: Delete an event provider by its provider ID
      tags:
        - Commerce Eventing
      parameters:
        - name: providerId
          in: path
          required: true
          description: Unique provider ID
          schema:
            type: string
      responses:
        '200':
          description: Event provider deleted successfully
          content:
            application/json:
              schema:
                type: boolean

  /V1/eventing/getEventSubscriptions:
    get:
      summary: Get event subscriptions
      description: Retrieve a list of all event subscriptions
      tags:
        - Commerce Eventing
      responses:
        '200':
          description: List of event subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventData'

  # Commerce Webhooks APIs
  /V1/webhooks/list:
    get:
      summary: Get webhook subscriptions
      description: Retrieve a list of all webhook subscriptions
      tags:
        - Commerce Webhooks
      responses:
        '200':
          description: List of webhook subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookData'

  # Backend UI Extensions APIs
  /V1/adminuisdk/massaction/{request_id}:
    get:
      summary: Get mass action failed request
      description: Retrieve details of a failed mass action request
      tags:
        - Backend UI Extensions
      parameters:
        - name: request_id
          in: path
          required: true
          description: Unique request ID
          schema:
            type: string
      responses:
        '200':
          description: Mass action request details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassActionFailedRequest'

  /V1/adminuisdk/orderviewbutton/{request_id}:
    get:
      summary: Get order view button failed request
      description: Retrieve details of a failed order view button request
      tags:
        - Backend UI Extensions
      parameters:
        - name: request_id
          in: path
          required: true
          description: Unique request ID
          schema:
            type: string
      responses:
        '200':
          description: Order view button request details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderViewButtonFailedRequest'

  # Custom Attributes B2B APIs
  /V1/negotiableQuote/setCustomAttributes:
    post:
      summary: Set custom attributes on negotiable quote
      description: Set custom attributes for a negotiable quote
      tags:
        - Custom Attributes B2B
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quoteId:
                  type: integer
                  description: Negotiable quote ID
                customAttributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeInterface'
                  description: Custom attributes to set
      responses:
        '200':
          description: Custom attributes set successfully
          content:
            application/json:
              schema:
                type: boolean

  /V1/company/setCustomAttributes:
    post:
      summary: Set custom attributes on company
      description: Set custom attributes for a company
      tags:
        - Custom Attributes B2B
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyId:
                  type: integer
                  description: Company ID
                customAttributes:
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeInterface'
                  description: Custom attributes to set
      responses:
        '200':
          description: Custom attributes set successfully
          content:
            application/json:
              schema:
                type: boolean

components:
  schemas:
    # Observability Schemas
    Subscription:
      type: object
      description: Observability subscription configuration
      required:
        - type
        - destination
        - destination_endpoint
        - destination_api_key
        - component
        - is_active
      properties:
        id:
          type: integer
          description: Unique identifier for the subscription
        type:
          type: string
          description: Type of subscription (logs, metrics)
          enum: ["logs", "metrics"]
        destination:
          type: string
          description: Destination service for the subscription
        destination_endpoint:
          type: string
          description: Endpoint URL for the destination service
        destination_api_key:
          type: string
          description: API key for the destination service
        component:
          type: array
          description: List of component types to monitor
          items:
            type: string
            enum: ["event", "webhook", "admin-ui-sdk"]
        is_active:
          type: boolean
          description: Whether the subscription is active

    SubscriptionRequest:
      type: object
      required:
        - subscription
      properties:
        subscription:
          $ref: '#/components/schemas/Subscription'

    # Shipping Methods Schemas
    OutOfProcessCarrier:
      type: object
      description: Out-of-process shipping carrier configuration
      required:
        - code
        - title
        - is_active
      properties:
        id:
          type: integer
          description: Unique identifier for the carrier
        code:
          type: string
          description: Unique code for the carrier
        title:
          type: string
          description: Display title for the carrier
        stores:
          type: array
          description: List of store codes where this carrier is available
          items:
            type: string
        countries:
          type: array
          description: List of country codes where this carrier is available
          items:
            type: string
        sort_order:
          type: integer
          description: Sort order for carrier display
        is_active:
          type: boolean
          description: Whether the carrier is active
        is_tracking_available:
          type: boolean
          description: Whether tracking is available for this carrier
        is_shipping_labels_available:
          type: boolean
          description: Whether shipping labels are available for this carrier

    OutOfProcessCarrierRequest:
      type: object
      required:
        - carrier
      properties:
        carrier:
          $ref: '#/components/schemas/OutOfProcessCarrier'

    # Payment Methods Schemas
    OutOfProcessPaymentMethod:
      type: object
      description: Out-of-process payment method configuration
      required:
        - code
        - title
        - active
        - backend_integration_url
      properties:
        id:
          type: integer
          description: Unique identifier for the payment method
        code:
          type: string
          description: Unique code for the payment method
        title:
          type: string
          description: Display title for the payment method
        active:
          type: boolean
          description: Whether the payment method is active
        backend_integration_url:
          type: string
          description: Backend URL for payment processing
          format: uri
        stores:
          type: array
          description: List of store codes where this payment method is available
          items:
            type: string
        order_status:
          type: string
          description: Initial order status for this payment method
          nullable: true
        countries:
          type: array
          description: List of country codes where this payment method is available
          items:
            type: string
        currencies:
          type: array
          description: List of currency codes supported by this payment method
          items:
            type: string
        custom_config:
          type: array
          description: Custom configuration key-value pairs
          items:
            $ref: '#/components/schemas/CustomConfigKeyValue'

    OutOfProcessPaymentMethodRequest:
      type: object
      required:
        - payment_method
      properties:
        payment_method:
          $ref: '#/components/schemas/OutOfProcessPaymentMethod'

    CustomConfigKeyValue:
      type: object
      description: Custom configuration key-value pair
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Configuration key
        value:
          type: string
          description: Configuration value

    # Tax Management Schemas
    OutOfProcessTaxIntegration:
      type: object
      description: Tax integration configuration
      required:
        - code
        - title
        - active
      properties:
        code:
          type: string
          description: Unique identifier for the tax integration
        title:
          type: string
          description: Display title for the tax integration
        active:
          type: boolean
          description: Whether the tax integration is currently active
        stores:
          type: array
          description: List of store codes where this tax integration is active
          items:
            type: string

    TaxIntegrationRequest:
      type: object
      required:
        - tax_integration
      properties:
        tax_integration:
          $ref: '#/components/schemas/OutOfProcessTaxIntegration'

    # Commerce Eventing Schemas
    EventData:
      type: object
      description: Event subscription data
      required:
        - name
        - parent
        - destination
        - provider_id
      properties:
        name:
          type: string
          description: Event name
        parent:
          type: string
          description: Event parent name
        fields:
          type: array
          description: Event fields
          items:
            $ref: '#/components/schemas/EventField'
        rules:
          type: array
          description: Event rules
          items:
            $ref: '#/components/schemas/EventRule'
        destination:
          type: string
          description: Event destination
        priority:
          type: boolean
          description: Event priority
        hipaa_audit_required:
          type: boolean
          description: Whether HIPAA audit is required
        provider_id:
          type: string
          description: Event provider ID

    EventDataRequest:
      type: object
      required:
        - event
      properties:
        event:
          $ref: '#/components/schemas/EventData'
        force:
          type: boolean
          description: Force subscription even if validation fails
          default: false

    EventField:
      type: object
      description: Event field definition
      properties:
        name:
          type: string
          description: Field name
        type:
          type: string
          description: Field type

    EventRule:
      type: object
      description: Event rule definition
      properties:
        field:
          type: string
          description: Field to apply rule to
        operator:
          type: string
          description: Rule operator
        value:
          type: string
          description: Rule value

    EventProvider:
      type: object
      description: Event provider configuration
      properties:
        provider_id:
          type: string
          description: Unique provider identifier
        name:
          type: string
          description: Provider name
        active:
          type: boolean
          description: Whether the provider is active

    EventProviderRequest:
      type: object
      required:
        - provider
      properties:
        provider:
          $ref: '#/components/schemas/EventProvider'

    # Commerce Webhooks Schemas
    WebhookData:
      type: object
      description: Webhook subscription data
      properties:
        webhook_method:
          type: string
          description: Webhook method name
        webhook_type:
          type: string
          description: Webhook type
        batch_name:
          type: string
          description: Webhook batch name
        batch_order:
          type: integer
          description: Webhook batch order
        hook_name:
          type: string
          description: Hook name
        url:
          type: string
          description: Hook URL
          format: uri
        priority:
          type: integer
          description: Hook priority
        required:
          type: boolean
          description: Whether hook is required
        soft_timeout:
          type: integer
          description: Hook soft timeout in seconds
        timeout:
          type: integer
          description: Hook timeout in seconds
        method:
          type: string
          description: HTTP method for the webhook
          enum: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        fallback_error_message:
          type: string
          description: Fallback error message
        ttl:
          type: integer
          description: Time to live in seconds
        fields:
          type: array
          description: Webhook fields
          items:
            $ref: '#/components/schemas/HookField'
        rules:
          type: array
          description: Webhook rules
          items:
            $ref: '#/components/schemas/HookRule'
        headers:
          type: array
          description: Webhook headers
          items:
            $ref: '#/components/schemas/HookHeader'

    HookField:
      type: object
      description: Webhook field definition
      properties:
        name:
          type: string
          description: Field name
        value:
          type: string
          description: Field value

    HookRule:
      type: object
      description: Webhook rule definition
      properties:
        field:
          type: string
          description: Field to apply rule to
        operator:
          type: string
          description: Rule operator
        value:
          type: string
          description: Rule value

    HookHeader:
      type: object
      description: Webhook header definition
      properties:
        name:
          type: string
          description: Header name
        value:
          type: string
          description: Header value

    # Backend UI Extensions Schemas
    MassActionFailedRequest:
      type: object
      description: Mass action failed request details
      properties:
        id:
          type: string
          description: Internal ID
        request_id:
          type: string
          description: Request ID
        action_id:
          type: string
          description: Action ID
        grid_type:
          type: string
          description: UI grid type
        error_status:
          type: string
          description: Error status
        error_message:
          type: string
          description: Error message
        request_timestamp:
          type: string
          description: Request timestamp
          format: date-time
        selected_ids:
          type: string
          description: Selected IDs as string

    OrderViewButtonFailedRequest:
      type: object
      description: Order view button failed request details
      properties:
        id:
          type: string
          description: Internal ID
        request_id:
          type: string
          description: Request ID
        error_status:
          type: string
          description: Error status
        error_message:
          type: string
          description: Error message
        request_timestamp:
          type: string
          description: Request timestamp
          format: date-time

    # Custom Attributes B2B Schemas
    AttributeInterface:
      type: object
      description: Custom attribute interface
      required:
        - attribute_code
        - value
      properties:
        attribute_code:
          type: string
          description: Attribute code
        value:
          description: Attribute value (can be any type)

    # Common Schemas
    SearchCriteria:
      type: object
      description: Search criteria for filtering results
      properties:
        filter_groups:
          type: array
          items:
            type: object
        sort_orders:
          type: array
          items:
            type: object
        page_size:
          type: integer
        current_page:
          type: integer

    Error:
      type: object
      description: Standard error response
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
        parameters:
          type: array
          description: Additional error parameters
          items:
            type: string
        trace:
          type: string
          description: Error trace (only in development mode)

    ValidationError:
      type: object
      description: Validation error response
      required:
        - message
      properties:
        message:
          type: string
          description: Validation error message
        errors:
          type: array
          description: Field-specific validation errors
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name with validation error
              message:
                type: string
                description: Field-specific error message

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Access denied - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequest:
      description: Bad request - invalid parameters or request format
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ValidationError:
      description: Unprocessable entity - validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

tags:
  - name: Observability Management
    description: Operations for managing observability subscriptions and monitoring configurations
  - name: Shipping Methods
    description: Operations for managing out-of-process shipping carrier configurations
  - name: Payment Methods
    description: Operations for managing out-of-process payment method configurations
  - name: Tax Management
    description: Operations for managing out-of-process tax integration configurations
  - name: Commerce Eventing
    description: Operations for managing event subscriptions and providers
  - name: Commerce Webhooks
    description: Operations for managing webhook subscriptions
  - name: Backend UI Extensions
    description: Operations for managing backend UI component integrations
  - name: Custom Attributes B2B
    description: Operations for managing B2B custom attributes

externalDocs:
  description: Adobe Commerce Web API Documentation
  url: https://developer.adobe.com/commerce/webapi/
